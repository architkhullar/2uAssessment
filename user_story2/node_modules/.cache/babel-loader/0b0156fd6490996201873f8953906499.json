{"ast":null,"code":"import _objectSpread from \"/Users/akhullar/Desktop/2ULaundry/2ULaundry assesmment/2uAssessment/user_story2/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/akhullar/Desktop/2ULaundry/2ULaundry assesmment/2uAssessment/user_story2/src/InvoiceDialog.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n/**\r\n * Class to show Invoice object dialog\r\n * \r\n */\n\nclass InvoiceDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _id: null,\n      invoice_number: \"12345\",\n      total: \"00.00\",\n      currency: \"USD\",\n      invoice_date: \"2019-08-24\",\n      due_date: \"2019-08-24\",\n      vendor_name: \"Vendor\",\n      remittance_address: \"Address\",\n      invoice_numberError: false,\n      totalError: false,\n      currencyError: false,\n      invoice_dateError: false,\n      due_dateError: false,\n      vendor_nameError: false,\n      remittance_addressError: false\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.invoice && this.state.prevInvoice !== newProps.invoice) {\n      this.setState(_objectSpread({\n        _id: null\n      }, newProps.invoice, {\n        prevInvoice: newProps.invoice\n      }));\n    }\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      [event.currentTarget.getAttribute('name')]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    // Perform input validation\n    const input = {\n      invoice_number: this.state.invoice_number.trim(),\n      total: parseInt(this.state.total),\n      currency: this.state.currency.trim(),\n      invoice_date: this.state.invoice_date.trim(),\n      due_date: this.state.due_date.trim(),\n      vendor_name: this.state.vendor_name.trim(),\n      remittance_address: this.state.remittance_address.trim()\n    };\n    const errors = {};\n\n    if (!input.invoice_number) {\n      errors.invoice_numberError = true;\n    }\n\n    if (!input.currency) {\n      errors.currencyError = true;\n    }\n\n    if (!input.invoice_date) {\n      errors.invoice_dateError = true;\n    }\n\n    if (!input.due_date) {\n      errors.due_dateError = true;\n    }\n\n    if (!input.vendor_name) {\n      errors.vendor_nameError = true;\n    }\n\n    if (!input.remittance_address) {\n      errors.remittance_addressError = true;\n    }\n\n    if (isNaN(input.total)) {\n      errors.totalError = true;\n    }\n\n    if (input.total <= 0) {\n      errors.totalError = true;\n    }\n\n    if (Object.keys(errors).length > 0) {\n      this.setState(errors);\n      return;\n    } // Reset error states\n\n\n    this.setState({\n      invoice_numberError: false,\n      totalError: false,\n      currencyError: false,\n      invoice_dateError: false,\n      due_dateError: false,\n      vendor_nameError: false,\n      remittance_addressError: false\n    });\n\n    if (typeof this.props.onSubmit === 'function') {\n      this.props.onSubmit(event, {\n        _id: this.state._id,\n        invoice_number: input.invoice_number,\n        total: input.total,\n        currency: input.currency,\n        invoice_date: input.invoice_date,\n        due_date: input.due_date,\n        vendor_name: input.vendor_name,\n        remittance_address: input.remittance_address\n      });\n    }\n  }\n\n  handleClose(event) {\n    // Reset error states\n    this.setState({\n      invoice_numberError: false,\n      totalError: false,\n      currencyError: false,\n      invoice_dateError: false,\n      due_dateError: false,\n      vendor_nameError: false,\n      remittance_addressError: false\n    });\n\n    if (typeof this.props.onClose === 'function') {\n      this.props.onClose(event);\n    }\n  }\n\n  render() {\n    return React.createElement(Dialog, {\n      open: this.props.show,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"invoice-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"invoice-dialog-title\",\n      disableTypography: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Create Invoices\")), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      error: this.state.invoice_numberError,\n      id: \"invoice-dialog-invoice_number\",\n      label: \"Invoice Number\",\n      name: \"invoice_number\",\n      value: this.state.invoice_number,\n      onChange: this.handleInputChange,\n      margin: \"normal\",\n      fullWidth: true,\n      disabled: this.props.loading,\n      helperText: this.state.invoice_numberError ? 'Invoice Number is required' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      error: this.state.totalError,\n      id: \"invoice-dialog-total\",\n      type: \"number\",\n      label: \"total\",\n      name: \"total\",\n      value: this.state.total,\n      onChange: this.handleInputChange,\n      margin: \"normal\",\n      fullWidth: true,\n      disabled: this.props.loading,\n      helperText: this.state.totalError ? 'Must be > 0' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      error: this.state.currencyError,\n      id: \"invoice-dialog-currency\",\n      label: \"Currency Error\",\n      name: \"currency\",\n      value: this.state.currency,\n      onChange: this.handleInputChange,\n      margin: \"normal\",\n      fullWidth: true,\n      disabled: this.props.loading,\n      helperText: this.state.currencyError ? 'currency is required' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      error: this.state.invoice_dateError,\n      id: \"invoice-dialog-invoice_date\",\n      label: \"Invoice Date\",\n      name: \"invoice_date\",\n      value: this.state.invoice_date,\n      onChange: this.handleInputChange,\n      margin: \"normal\",\n      fullWidth: true,\n      disabled: this.props.loading,\n      helperText: this.state.invoice_dateError ? 'Invoice Date is required' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      error: this.state.due_dateError,\n      id: \"invoice-dialog-due_date\",\n      label: \"Due Date\",\n      name: \"due_date\",\n      value: this.state.due_date,\n      onChange: this.handleInputChange,\n      margin: \"normal\",\n      fullWidth: true,\n      disabled: this.props.loading,\n      helperText: this.state.due_dateError ? 'Due date is required' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      error: this.state.vendor_nameError,\n      id: \"invoice-dialog-vendor_name\",\n      label: \"Vendor Name\",\n      name: \"vendor_name\",\n      value: this.state.vendor_name,\n      onChange: this.handleInputChange,\n      margin: \"normal\",\n      fullWidth: true,\n      disabled: this.props.loading,\n      helperText: this.state.vendor_nameError ? 'Vendor name is required' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      error: this.state.remittance_addressError,\n      id: \"invoice-dialog-remittance_address\",\n      label: \"Remittance Address\",\n      name: \"remittance_address\",\n      value: this.state.remittance_address,\n      onChange: this.handleInputChange,\n      margin: \"normal\",\n      fullWidth: true,\n      disabled: this.props.loading,\n      helperText: this.state.remittance_addressError ? 'Remittance Address is required' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"secondary\",\n      disabled: this.props.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      color: \"primary\",\n      disabled: this.props.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Save\")));\n  }\n\n}\n\nexport default InvoiceDialog;","map":{"version":3,"sources":["/Users/akhullar/Desktop/2ULaundry/2ULaundry assesmment/2uAssessment/user_story2/src/InvoiceDialog.js"],"names":["React","Button","TextField","Typography","Dialog","DialogActions","DialogContent","DialogTitle","InvoiceDialog","Component","constructor","props","state","_id","invoice_number","total","currency","invoice_date","due_date","vendor_name","remittance_address","invoice_numberError","totalError","currencyError","invoice_dateError","due_dateError","vendor_nameError","remittance_addressError","handleInputChange","bind","handleSubmit","handleClose","componentWillReceiveProps","newProps","invoice","prevInvoice","setState","event","currentTarget","getAttribute","target","value","input","trim","parseInt","errors","isNaN","Object","keys","length","onSubmit","onClose","render","show","loading"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n/**\r\n * Class to show Invoice object dialog\r\n * \r\n */\r\nclass InvoiceDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      _id: null,\r\n      invoice_number: \"12345\",\r\n      total: \"00.00\",\r\n      currency: \"USD\",\r\n      invoice_date: \"2019-08-24\",\r\n      due_date: \"2019-08-24\",\r\n      vendor_name: \"Vendor\",\r\n      remittance_address: \"Address\",\r\n     \r\n      invoice_numberError: false,\r\n      totalError: false,\r\n      currencyError: false,\r\n      invoice_dateError: false,\r\n      due_dateError: false,\r\n      vendor_nameError: false,\r\n      remittance_addressError: false,\r\n      \r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if(newProps.invoice && this.state.prevInvoice !== newProps.invoice) {\r\n      this.setState({_id: null, ...newProps.invoice, prevInvoice: newProps.invoice});\r\n    }\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    this.setState({[event.currentTarget.getAttribute('name')]: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    // Perform input validation\r\n    const input = {\r\n      \r\n      invoice_number: this.state.invoice_number.trim(),\r\n      total:  parseInt(this.state.total),\r\n      currency: this.state.currency.trim(),\r\n      invoice_date: this.state.invoice_date.trim(),\r\n      due_date: this.state.due_date.trim(),\r\n      vendor_name: this.state.vendor_name.trim(),\r\n      remittance_address: this.state.remittance_address.trim()\r\n    };\r\n   \r\n    const errors = {};\r\n   \r\n    if(!input.invoice_number) {\r\n      errors.invoice_numberError = true;\r\n    }\r\n    if(!input.currency) {\r\n      errors.currencyError = true;\r\n    }\r\n    if(!input.invoice_date) {\r\n      errors.invoice_dateError = true;\r\n    }\r\n    if(!input.due_date) {\r\n      errors.due_dateError = true;\r\n    }\r\n    if(!input.vendor_name) {\r\n      errors.vendor_nameError = true;\r\n    }\r\n    if(!input.remittance_address) {\r\n      errors.remittance_addressError = true;\r\n    }\r\n   \r\n    if(isNaN(input.total)) {\r\n      errors.totalError = true;\r\n    }\r\n    if(input.total <= 0) {\r\n      errors.totalError = true;\r\n    }\r\n    \r\n\r\n    if(Object.keys(errors).length > 0) {\r\n      this.setState(errors);\r\n      return;\r\n    }\r\n\r\n    // Reset error states\r\n    this.setState({\r\n     \r\n      invoice_numberError: false,\r\n      totalError: false,\r\n      currencyError: false,\r\n      invoice_dateError: false,\r\n      due_dateError: false,\r\n      vendor_nameError: false,\r\n      remittance_addressError: false\r\n    });\r\n\r\n    if(typeof this.props.onSubmit === 'function') {\r\n      this.props.onSubmit(event, {\r\n        _id: this.state._id,\r\n       \r\n        invoice_number: input.invoice_number,\r\n        total: input.total,\r\n        currency: input.currency,\r\n        invoice_date: input.invoice_date,\r\n        due_date: input.due_date,\r\n        vendor_name: input.vendor_name,\r\n        remittance_address: input.remittance_address\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClose(event) {\r\n    // Reset error states\r\n    this.setState({\r\n      \r\n      invoice_numberError: false,\r\n      totalError: false,\r\n      currencyError: false,\r\n      invoice_dateError: false,\r\n      due_dateError: false,\r\n      vendor_nameError: false,\r\n      remittance_addressError: false\r\n    });\r\n    if(typeof this.props.onClose === 'function') {\r\n      this.props.onClose(event);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dialog open={this.props.show} onClose={this.handleClose} aria-labelledby=\"invoice-dialog-title\">\r\n        <DialogTitle id=\"invoice-dialog-title\" disableTypography={true}>\r\n          <Typography variant=\"h5\">Create Invoices</Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n            <TextField\r\n            error={this.state.invoice_numberError}\r\n            id=\"invoice-dialog-invoice_number\"\r\n            label=\"Invoice Number\"\r\n            name=\"invoice_number\"\r\n            value={this.state.invoice_number}\r\n            onChange={this.handleInputChange}\r\n            margin=\"normal\"\r\n            fullWidth={true}\r\n            disabled={this.props.loading}\r\n            helperText={this.state.invoice_numberError ? 'Invoice Number is required' : ''}\r\n          />\r\n            <TextField\r\n            error={this.state.totalError}\r\n            id=\"invoice-dialog-total\"\r\n            type=\"number\"\r\n            label=\"total\"\r\n            name=\"total\"\r\n            value={this.state.total}\r\n            onChange={this.handleInputChange}\r\n            margin=\"normal\"\r\n            fullWidth={true}\r\n            disabled={this.props.loading}\r\n            helperText={this.state.totalError ? 'Must be > 0' : ''}\r\n          />\r\n             <TextField\r\n            error={this.state.currencyError}\r\n            id=\"invoice-dialog-currency\"\r\n            label=\"Currency Error\"\r\n            name=\"currency\"\r\n            value={this.state.currency}\r\n            onChange={this.handleInputChange}\r\n            margin=\"normal\"\r\n            fullWidth={true}\r\n            disabled={this.props.loading}\r\n            helperText={this.state.currencyError ? 'currency is required' : ''}\r\n          />\r\n          <TextField\r\n            error={this.state.invoice_dateError}\r\n            id=\"invoice-dialog-invoice_date\"\r\n            label=\"Invoice Date\"\r\n            name=\"invoice_date\"\r\n            value={this.state.invoice_date}\r\n            onChange={this.handleInputChange}\r\n            margin=\"normal\"\r\n            fullWidth={true}\r\n            disabled={this.props.loading}\r\n            helperText={this.state.invoice_dateError ? 'Invoice Date is required' : ''}\r\n          />\r\n         <TextField\r\n            error={this.state.due_dateError}\r\n            id=\"invoice-dialog-due_date\"\r\n            label=\"Due Date\"\r\n            name=\"due_date\"\r\n            value={this.state.due_date}\r\n            onChange={this.handleInputChange}\r\n            margin=\"normal\"\r\n            fullWidth={true}\r\n            disabled={this.props.loading}\r\n            helperText={this.state.due_dateError ? 'Due date is required' : ''}\r\n          />\r\n       <TextField\r\n            error={this.state.vendor_nameError}\r\n            id=\"invoice-dialog-vendor_name\"\r\n            label=\"Vendor Name\"\r\n            name=\"vendor_name\"\r\n            value={this.state.vendor_name}\r\n            onChange={this.handleInputChange}\r\n            margin=\"normal\"\r\n            fullWidth={true}\r\n            disabled={this.props.loading}\r\n            helperText={this.state.vendor_nameError ? 'Vendor name is required' : ''}\r\n          />\r\n\r\n          <TextField\r\n            error={this.state.remittance_addressError}\r\n            id=\"invoice-dialog-remittance_address\"\r\n            label=\"Remittance Address\"\r\n            name=\"remittance_address\"\r\n            value={this.state.remittance_address}\r\n            onChange={this.handleInputChange}\r\n            margin=\"normal\"\r\n            fullWidth={true}\r\n            disabled={this.props.loading}\r\n            helperText={this.state.remittance_addressError ? 'Remittance Address is required' : ''}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.handleClose} color=\"secondary\" disabled={this.props.loading}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.handleSubmit} color=\"primary\" disabled={this.props.loading}>\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InvoiceDialog;\r\n"]},"metadata":{},"sourceType":"module"}